package prototipoensinoingles;

public class GUI extends javax.swing.JFrame {
    //VARIÁVEIS DE ESTADO
    //private int PGNum = 1;
    //private int pontos = 0;
    //private int pontosProva = 0;
    private int modoAula = 0;
    /*0 = modo de estudo
    *1 = modo de prova
    *2 = tela final */
    
    /*public void setPGNum(int pgn){
        this.PGNum = pgn;
    }
    public int getPGNum(){
        return this.PGNum;
    }*/
    public void setModoAula(int modo){
        this.modoAula = modo;
    }
    public int getModoAula(){
        return this.modoAula;
    }
    //OBJETOS DE CLASSE
    Etiquetagem Etiquetagem = new Etiquetagem();
    ControleExercicios CE = new ControleExercicios();
    
    //Creates new form GUI(Padrão da IDE Apache NetBeans)
    public GUI() {
        initComponents();
        PGAnt.setVisible(false);
    }
    
    public String feedback(){
        //ControleExercicios ce = new ControleExercicios();
        String relatorio =  "OBRIGADO POR PARTICIPAR!\n"+
                            "Pontos Teoria: "+CE.getPontos()+" de 18\n"+
                            "Pontos Prova: "+CE.getPontosProva()+" de 18\n\n";
        if(CE.getPontosProva() < 9){
            relatorio = relatorio+"Sua nota de prova foi abaixo da média, que é 9. Tente outra vez.";
        }else if(CE.getPontosProva() >= 9 && CE.getPontosProva() < 15){
            relatorio = relatorio+"Parabéns! Sua nota de prova está acima da média, que é 9.";
        }else if(CE.getPontosProva() >= 15){
            relatorio = relatorio+"Parabéns! Sua nota de prova é muito alta!";
        }return relatorio;
    }
    
    /**PADRÃO  DA IDE apache NetBeans
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        PaginaLabel = new javax.swing.JLabel();
        proxPG = new javax.swing.JButton();
        PGAnt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        PontosLabel = new javax.swing.JLabel();
        RadioButtonA = new javax.swing.JRadioButton();
        RadioButtonB = new javax.swing.JRadioButton();
        RadioButtonC = new javax.swing.JRadioButton();
        RadioButtonD = new javax.swing.JRadioButton();
        Confirmar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));
        setName("Telinha"); // NOI18N
        setResizable(false);

        PaginaLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        PaginaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PaginaLabel.setText("Página "+Etiquetagem.getPGNum());
        PaginaLabel.setToolTipText("");
        PaginaLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        proxPG.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        proxPG.setText("Próxima Página");
        proxPG.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3, true));
        proxPG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxPGActionPerformed(evt);
            }
        });

        PGAnt.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        PGAnt.setText("Página Anterior");
        PGAnt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3, true));
        PGAnt.setName(""); // NOI18N
        PGAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PGAntActionPerformed(evt);
            }
        });

        AreaTexto.setEditable(false);
        AreaTexto.setBackground(new java.awt.Color(255, 255, 255));
        AreaTexto.setColumns(20);
        AreaTexto.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        AreaTexto.setRows(5);
        Etiquetagem.setTeoria();
        AreaTexto.setText(Etiquetagem.getTeoria(Etiquetagem.getPGNum()));
        AreaTexto.setPreferredSize(new java.awt.Dimension(412, 150));
        jScrollPane1.setViewportView(AreaTexto);

        PontosLabel.setBackground(new java.awt.Color(255, 255, 255));
        PontosLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        PontosLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PontosLabel.setText("Pontos = "+CE.getPontos());
        PontosLabel.setToolTipText("");
        PontosLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RadioButtonA.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup.add(RadioButtonA);
        Etiquetagem.setAltA();
        RadioButtonA.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        RadioButtonA.setText(Etiquetagem.getAltA(Etiquetagem.getPGNum()));
        RadioButtonA.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        RadioButtonB.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup.add(RadioButtonB);
        Etiquetagem.setAltB();
        RadioButtonB.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        RadioButtonB.setText(Etiquetagem.getAltB(Etiquetagem.getPGNum()));

        RadioButtonC.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup.add(RadioButtonC);
        Etiquetagem.setAltC();
        RadioButtonC.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        RadioButtonC.setText(Etiquetagem.getAltC(Etiquetagem.getPGNum()));

        RadioButtonD.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup.add(RadioButtonD);
        Etiquetagem.setAltD();
        RadioButtonD.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        RadioButtonD.setText(Etiquetagem.getAltD(Etiquetagem.getPGNum()));
        RadioButtonD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonDActionPerformed(evt);
            }
        });

        Confirmar.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        Confirmar.setText("CONFIRMAR RESPOSTA");
        Confirmar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3, true));
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(PontosLabel)
                        .addComponent(RadioButtonB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RadioButtonC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RadioButtonD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RadioButtonA, javax.swing.GroupLayout.DEFAULT_SIZE, 903, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(PGAnt)
                            .addGap(161, 161, 161)
                            .addComponent(PaginaLabel)
                            .addGap(175, 175, 175)
                            .addComponent(proxPG))))
                .addGap(6, 6, 6))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Confirmar)
                .addGap(595, 595, 595))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proxPG)
                    .addComponent(PGAnt)
                    .addComponent(PaginaLabel))
                .addGap(6, 6, 6)
                .addComponent(PontosLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(RadioButtonA)
                .addGap(10, 10, 10)
                .addComponent(RadioButtonB)
                .addGap(10, 10, 10)
                .addComponent(RadioButtonC)
                .addGap(10, 10, 10)
                .addComponent(RadioButtonD)
                .addGap(10, 10, 10)
                .addComponent(Confirmar)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //acao do botao de avancar pg
    private void proxPGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxPGActionPerformed
        if(getModoAula() == 2){
            System.exit(0);
        }
        Etiquetagem.setPGNum(Etiquetagem.getPGNum()+1);//aumenta o numero da pagina
        PaginaLabel.setText("Pagina "+Etiquetagem.getPGNum());//atualiza label da pagina
        //(getPGNum() > 1 && getPGNum() < 11)||(getPGNum() > 11 && getPGNum() < 20)
        if(Etiquetagem.getPGNum() > 1 && Etiquetagem.getPGNum() != 11 && Etiquetagem.getPGNum() != 20){
            /*botão de voltar página fica visível entre as páginas 1 e 10 e
            entre 12 e 19. Ele não aparece nas páginas 11 e 20 */
            PGAnt.setVisible(true);
        }
        if(Etiquetagem.getPGNum() == 11){//prova começa a partir da página 11
            PGAnt.setVisible(false);
            setModoAula(1);
        }
        
        AreaTexto.setText(Etiquetagem.getTeoria(Etiquetagem.getPGNum()));//atualiza tela de texto
        RadioButtonA.setText(Etiquetagem.getAltA(Etiquetagem.getPGNum()));//atualiza alternativa A
        RadioButtonB.setText(Etiquetagem.getAltB(Etiquetagem.getPGNum()));//atualiza alternativa B
        RadioButtonC.setText(Etiquetagem.getAltC(Etiquetagem.getPGNum()));//atualiza alternativa C
        RadioButtonD.setText(Etiquetagem.getAltD(Etiquetagem.getPGNum()));//atualiza alternativa D
        //checa se exercício deve estar ativo ou não
        if(CE.getExTravado(Etiquetagem.getPGNum())==true){//se verdadeiro, ex está travado
            RadioButtonA.setEnabled(false);
            RadioButtonB.setEnabled(false);
            RadioButtonC.setEnabled(false);
            RadioButtonD.setEnabled(false);
            Confirmar.setEnabled(false);
        }else if(CE.getExTravado(Etiquetagem.getPGNum())==false){//se falso, exercício deveria ser ativado
            RadioButtonA.setEnabled(true);
            RadioButtonB.setEnabled(true);
            RadioButtonC.setEnabled(true);
            RadioButtonD.setEnabled(true);
            Confirmar.setEnabled(true);
        }
        
        if(Etiquetagem.getPGNum() == 20){//última página está na página 20, então não precisa retroceder
            PGAnt.setVisible(false);
            setModoAula(2);
            proxPG.setText("Finalizar programa");
            //Etiquetagem.SobrescreverUltimaPG(20, Etiquetagem.feedback());
            AreaTexto.setText(feedback());
        }
    }//GEN-LAST:event_proxPGActionPerformed
    //acao do botao de voltar pg
    private void PGAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PGAntActionPerformed
        if((Etiquetagem.getPGNum() <= 2)||(Etiquetagem.getPGNum()-1 == 11)){//esconder botao ates de ir para 1 ou 11
            PGAnt.setVisible(false);
        }
        Etiquetagem.setPGNum(Etiquetagem.getPGNum()-1);//diminui o numero da pagina
        PaginaLabel.setText("Pagina "+Etiquetagem.getPGNum());//atualiza label da pagina
        AreaTexto.setText(Etiquetagem.getTeoria(Etiquetagem.getPGNum()));//atualiza tela de texto
        RadioButtonA.setText(Etiquetagem.getAltA(Etiquetagem.getPGNum()));//atualiza alternativa A
        RadioButtonB.setText(Etiquetagem.getAltB(Etiquetagem.getPGNum()));//atualiza alternativa B
        RadioButtonC.setText(Etiquetagem.getAltC(Etiquetagem.getPGNum()));//atualiza alternativa C
        RadioButtonD.setText(Etiquetagem.getAltD(Etiquetagem.getPGNum()));//atualiza alternativa D
        //checa se exercício deve estar ativo ou não
        if(CE.getExTravado(Etiquetagem.getPGNum())==true){//se verdadeiro, ex está travado
            RadioButtonA.setEnabled(false);
            RadioButtonB.setEnabled(false);
            RadioButtonC.setEnabled(false);
            RadioButtonD.setEnabled(false);
            Confirmar.setEnabled(false);
        }else if(CE.getExTravado(Etiquetagem.getPGNum())==false){//se falso, exercício deveria ser ativado
            RadioButtonA.setEnabled(true);
            RadioButtonB.setEnabled(true);
            RadioButtonC.setEnabled(true);
            RadioButtonD.setEnabled(true);
            Confirmar.setEnabled(true);
        }
    }//GEN-LAST:event_PGAntActionPerformed

    private void RadioButtonDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioButtonDActionPerformed

    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
        /*aplica função de correção da questão e fecha ela
        *se a alternativa nao for errada, pontuacao é "incrementada"
        *char opcao = 'x' se nenhuma alternativa é selecionada */
        if(getModoAula() == 0){//MODO DE ESTUDO
            //Incrementa pontos normais
            if(RadioButtonA.isSelected()){
                //opcao = 'a';
                CE.setPontos(CE.getPontos()+CE.corrigir(Etiquetagem.getPGNum(), 'a'));
            }else if(RadioButtonB.isSelected()){
                //opcao = 'b';
                CE.setPontos(CE.getPontos()+CE.corrigir(Etiquetagem.getPGNum(), 'b'));
            }else if(RadioButtonC.isSelected()){
                //opcao = 'c';
                CE.setPontos(CE.getPontos()+CE.corrigir(Etiquetagem.getPGNum(), 'c'));
            }else if(RadioButtonD.isSelected()){
                //opcao = 'd';
                CE.setPontos(CE.getPontos()+CE.corrigir(Etiquetagem.getPGNum(), 'd'));
            }else{//opcao = 'x'/opcao vazia
                CE.setPontos(CE.getPontos()+CE.corrigir(Etiquetagem.getPGNum(), 'x'));
            }
        }else if(getModoAula() == 1){//MODO DE PROVA
            //Incrementa pontos da prova
            if(RadioButtonA.isSelected()){
                //opcao = 'a';
                CE.setPontosProva(CE.getPontosProva()+CE.corrigir(Etiquetagem.getPGNum(), 'a'));
            }else if(RadioButtonB.isSelected()){
                //opcao = 'b';
                CE.setPontosProva(CE.getPontosProva()+CE.corrigir(Etiquetagem.getPGNum(), 'b'));
            }else if(RadioButtonC.isSelected()){
                //opcao = 'c';
                CE.setPontosProva(CE.getPontosProva()+CE.corrigir(Etiquetagem.getPGNum(), 'c'));
            }else if(RadioButtonD.isSelected()){
                //opcao = 'd';
                CE.setPontosProva(CE.getPontosProva()+CE.corrigir(Etiquetagem.getPGNum(), 'd'));
            }else{//opcao = 'x'/opcao vazia
                CE.setPontosProva(CE.getPontosProva()+CE.corrigir(Etiquetagem.getPGNum(), 'x'));
            }
        }
        
        buttonGroup.clearSelection();//depois de confirmar, o botão é desativado
        CE.setExTravado(Etiquetagem.getPGNum());//o exercício é travado
        RadioButtonA.setEnabled(false);
        RadioButtonB.setEnabled(false);
        RadioButtonC.setEnabled(false);
        RadioButtonD.setEnabled(false);
        Confirmar.setEnabled(false);
        PontosLabel.setText("Pontos = "+CE.getPontos());//atualiza a pontuação exibida
    }//GEN-LAST:event_ConfirmarActionPerformed

    public void IniciarGUI() {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaTexto;
    private javax.swing.JButton Confirmar;
    private javax.swing.JButton PGAnt;
    private javax.swing.JLabel PaginaLabel;
    private javax.swing.JLabel PontosLabel;
    private javax.swing.JRadioButton RadioButtonA;
    private javax.swing.JRadioButton RadioButtonB;
    private javax.swing.JRadioButton RadioButtonC;
    private javax.swing.JRadioButton RadioButtonD;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton proxPG;
    // End of variables declaration//GEN-END:variables
}